openapi: 3.0.0
info:
  title: Natural Input
  version: "1.0.0-oas3"

paths:
  /documentSetting:
    post:
      tags:
        - documentSetting
      summary: Create document setting with identifier generated by server
      operationId: postDocumentSetting
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/DocumentSetting'
  
  '/documentSetting/{identifier}':
    put:
      tags:
        - documentSetting
      summary: Not yet implemented
      description: Update or create document
      operationId: putDocumentSettingByIdentifier
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSetting'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/DocumentSetting'

  '/pageSetting/':
    post:
      tags:
        - pageSetting
      summary: Not yet implemented, create from nested documentSetting
      operationId: createPageSetting
      parameters:
        - name: id
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/PageSetting'


  '/pageSetting/{id}':
    put:
      tags:
        - pageSetting
      summary: Not yet implemented, create from nested documentSetting
      operationId: putPageSetting
      parameters:
        - name: id
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/PageSetting'

  '/fieldSetting/':
    post:
      tags:
        - fieldSetting
      summary: Not yet implemented, create from nested documentSetting
      operationId: postFieldSetting
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Field setting not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/FieldSetting'

  '/fieldSetting/{id}':
    put:
      tags:
        - fieldSetting
      summary: Not yet implemented, create from nested documentSetting
      operationId: putFieldSettingById
      parameters:
        - name: id
          in: path
          description: Field setting id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/FieldSetting'

  '/recognitionSetting/':
    post:
      tags:
        - recognitionSetting
      summary: Not yet implemented, create from nested documentSetting
      operationId: postRecognitionSetting
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: RecognitionSetting not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/RecognitionSetting'

  '/recognitionSetting/{id}':
    put:
      tags:
        - recognitionSetting
      summary: Not yet implemented, create from nested documentSetting
      operationId: putRecognitionSettingById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: RecognitionSetting not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/RecognitionSetting'

  /document:
    post:
      tags:
        - document
      summary: Create document with identifier generated by server
      operationId: postDocument
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Document'

    get:
      tags:
        - document
      summary: Get all documents
      operationId: getDocument
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/document/{identifier}':
    get:
      tags:
        - document
      summary: Get document
      description: Returns a single document
      operationId: getDocumentByIdentifier
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - document
      summary: Update or create document
      description: Update or create document
      operationId: putDocumentByIdentifier
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Document'

  '/document/{identifier}/page/{address}':
    put:
      tags:
        - page
      summary: Create a page by page address
      operationId: putPageByDocument
      parameters:
        - name: identifier
          in: path
          description: ID of document
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: Address of page to add or update
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Page'

  '/field/':
    post:
      tags:
        - field
      summary: Not implemented (yet), created automatically from fieldSetting when page is created
      operationId: createField
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Field'

  '/field/{id}':
    put:
      tags:
        - field
      summary: Not implemented (yet), created automatically from fieldSetting when page is created
      operationId: updateFieldById
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Field'

  '/page/{address}/background':
    put:
      tags:
        - background
      summary: Upload page background
      operationId: updatePageBackground
      parameters:
        - name: Content-Type
          in: header
          description: Content-Type header
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      requestBody:
        content:
          image/png:
              schema:
                type: string
                format: binary
          image/jpeg:
              schema:
                type: string
                format: binary
          image/jpg:
              schema:
                type: string
                format: binary
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/page/{address}/stroke':
    post:
      tags:
        - stroke
      summary: Add strokes to a page
      operationId: putStrokeByPageNumber
      parameters:
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      security:
        - ApiKey: []
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Stroke'

servers:
  - url: 'blabla'
components:
  securitySchemes:
    ApiKey:
      type: apiKey
      name: x-api-key
      in: header
  requestBodies:
    DocumentSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSetting'
      description: Document setting object that needs to be added to the store
      required: true
    PageSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageSetting'
      description: Page setting object that needs to be added to Document.
      required: true
    FieldSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FieldSetting'
      description: Field setting object that needs to be added to the store
      required: true  
    RecognitionSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecognitionSetting'
      description: Page setting object that needs to be added to Document.
      required: true
  
    Document:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
      description: Document object that needs to be added to the store
      required: true
    Page:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Page'
      description: Page object that needs to be added to Document.
      required: true
    Field:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Field'
      description: Field object that needs to be added to Document.
      required: true      
    Stroke:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Stroke'
      description: Stroke object that needs to be added to Document.
      required: true
    RecognitionResult:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecognitionResult'
      description: Recognition result object that needs to be added to Document.
      required: true      
    RecognitionCandidate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RecognitionCandidate'
      description: Recognition candidate object that needs to be added to Document.
      required: true      
      
      
  schemas:
    DocumentSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32        
        default_name:
          type: string
        page_settings:
          type: array
          items:
            $ref: '#/components/schemas/PageSetting'

    PageSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32
        document_setting_id:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        width:
          type: number
          format: float
        height:
          type: number
          format: float
        field_settings:
          type: array
          items:
            $ref: '#/components/schemas/FieldSetting'

    FieldSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32
        page_setting_id:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        width:
          type: number
          format: float
        height:
          type: number
          format: float
        recognition_settings:
          $ref: '#/components/schemas/RecognitionSetting'
          
    RecognitionSetting:
      type: object
      properties:
        id:
          type: integer
          format: int32        
        field_setting_id:
          type: integer
          format: int32
        input_mode:
          type: string
        input_type:
          type: string
        language:
          type: string

    Document:
      type: object
      required:
        - identifier
      properties:
        id:
          type: integer
          format: int32        
        document_setting_id:
          type: integer
          format: int32        
        identifier:
          type: string
        name:
          type: string

    Page:
      type: object
      properties:
        id:
          type: integer
          format: int32        
        document_id:
          type: integer
          format: int32        
        page_setting_id:
          type: integer
          format: int32        
        address:
          type: string
        number:
          type: integer
          format: int32
    Field:
      type: object
      properties:
        id:
          type: integer
          format: int32
        page_id:
          type: integer
          format: int32
        field_setting_id:
          type: integer
          format: int32
        recognition_setting_id:
          type: integer
          format: int32
        x:
          type: number
          format: float
        y:
          type: number
          format: float
    RecognitionResult:
      type: object
      properties:
        id:
          type: integer
          format: int32        
        field_id:
          type: integer
          format: int32
        selected_candidate_id:
          type: integer
          format: int32

    RecognitionCandidate:
      type: object
      properties:
        id:
          type: integer
          format: int32        
        field_id:
          type: integer
          format: int32
        value:
          type: string
        normalized_score:
          type: string
        resemblance_score:
          type: string
    Stroke:
      type: object
      properties:
        id:
          type: integer
          format: int32
        page_id:
          type: integer
          format: int32
        dots:
          type: array
          items:
            $ref: '#/components/schemas/Dot'
    Dot:
      type: object
      properties:
        id:
          type: integer
          format: int32
        stroke_id:
          type: integer
          format: int32
        x:
          type: number
          format: float
        y:
          type: number
          format: float