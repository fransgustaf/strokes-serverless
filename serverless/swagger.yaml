openapi: 3.0.0
info:
  title: Natural Input
  version: "1.0.0-oas3"

paths:
  /documentSetting:
    post:
      tags:
        - documentSetting
      summary: Create document with identifier generated by server
      operationId: createDocumentSetting
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/DocumentSetting'
    get:
      tags:
        - documentSetting
      summary: Get all documents
      operationId: getDocumentSettings
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
  '/documentSetting/{identifier}':
    get:
      tags:
        - documentSetting
      summary: Get document
      description: Returns a single document
      operationId: getDocumentSettingById
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSetting'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
    put:
      tags:
        - documentSetting
      summary: Update or create document
      description: Update or create document
      operationId: updateDocumentSetting
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSetting'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
  
  '/pageSetting/':
    post:
      tags:
        - pageSetting
      summary: Update an existing page
      operationId: createPageSetting
      parameters:
        - name: id
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/PageSetting'


  '/pageSetting/{id}':
    get:
      tags:
        - pageSetting
      summary: Get an existing page
      operationId: getPageSettingById
      parameters:
        - name: id
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - pageSetting
      summary: Update an existing page
      operationId: updatePageSettingById
      parameters:
        - name: id
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/PageSetting'

  '/fieldSetting/':
    post:
      tags:
        - fieldSetting
      summary: Update
      operationId: createFieldSetting
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/fieldSetting/{id}':
    get:
      tags:
        - fieldSetting
      summary: Get
      operationId: getFieldSettingById
      parameters:
        - name: id
          in: path
          description: Field id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - fieldSetting
      summary: Update
      operationId: updateFieldSettingById
      parameters:
        - name: id
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/recognitionSetting/':
    post:
      tags:
        - recognitionSetting
      summary: Update
      operationId: createrecognitionSetting
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/recognitionSetting/{id}':
    get:
      tags:
        - recognitionSetting
      summary: Get
      operationId: getRecognitionSettingById
      parameters:
        - name: id
          in: path
          description: Field id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - recognitionSetting
      summary: Update
      operationId: updateRecognitionSettingById
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  /document:
    post:
      tags:
        - document
      summary: Create document with identifier generated by server
      operationId: createDocument
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Document'
    get:
      tags:
        - document
      summary: Get all documents
      operationId: getDocuments
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
  '/document/{identifier}':
    get:
      tags:
        - document
      summary: Get document
      description: Returns a single document
      operationId: getDocumentById
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
    put:
      tags:
        - document
      summary: Update or create document
      description: Update or create document
      operationId: updateOrCreateDocument
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
        '400':
          description: Invalid ID supplied
        '404':
          description: Document not found
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations


  '/page/{address}':
    get:
      tags:
        - page
      summary: Get an existing page
      operationId: getPageByAddress
      parameters:
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - page
      summary: Update an existing page
      operationId: updatePageByAddress
      parameters:
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Page'


  '/document/{identifier}/page/{number}':
    get:
      tags:
        - page
      summary: Get an existing page by page number
      operationId: getPageByDocumentPage
      parameters:
        - name: Content-Type
          in: header
          description: Content-Type header
          required: true
          schema:
            type: string
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
        - name: number
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - page
      summary: Create a page by page number
      operationId: createPageByDocumentPage
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
        - name: number
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Page'

  '/field/':
    post:
      tags:
        - field
      summary: Update
      operationId: createField
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/field/{id}':
    get:
      tags:
        - field
      summary: Get
      operationId: getFieldById
      parameters:
        - name: id
          in: path
          description: Field id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - field
      summary: Update
      operationId: updateFieldById
      parameters:
        - name: id
          in: path
          description: Id
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

  '/page/{address}/background':
    put:
      tags:
        - background
      summary: Upload page background
      operationId: updatePageBackground
      parameters:
        - name: Content-Type
          in: header
          description: Content-Type header
          required: true
          schema:
            type: string
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      requestBody:
        content:
          image/png:
              schema:
                type: string
                format: binary
          image/jpeg:
              schema:
                type: string
                format: binary
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations


  '/document/{identifier}/page/{number}/background':
    put:
      tags:
        - background
      summary: Upload page background
      operationId: updateDocumentPageBackground
      parameters:
        - name: identifier
          in: path
          description: Document identifier
          required: true
          schema:
            type: string
        - name: number
          in: path
          description: Page number
          required: true
          schema:
            type: string
      requestBody:
        content:
          image/png:
              schema:
                type: string
                format: binary
          image/jpeg:
              schema:
                type: string
                format: binary
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations


  '/page/{address}/stroke':
    get:
      tags:
        - stroke
      summary: Get strokes on number
      operationId: getStrokesByNumber
      parameters:
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - stroke
      summary: Update an existing page
      operationId: updateStrokesByNumber
      parameters:
        - name: address
          in: path
          description: Page address
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Page'
  '/document/{identifier}/page/{number}/stroke':
    get:
      tags:
        - stroke
      summary: Get strokes for a page
      operationId: getStrokesByDocumentAndPage
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
        - name: number
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations

    put:
      tags:
        - stroke
      summary: Add strokes for a page
      operationId: putStrokesByDocumentAndPage
      parameters:
        - name: identifier
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
        - name: number
          in: path
          description: ID of document to return
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Page not found
        '405':
          description: Validation exception
      x-amazon-apigateway-integration:
        httpMethod: POST
        type: aws_proxy
        uri: >-
          arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:113274499007:function:InputFunction/invocations
      requestBody:
        $ref: '#/components/requestBodies/Page'
servers:
  - url: 'https://virtserver.swaggerhub.com/formidableservices/naturalinput/1.0.0'
  - url: 'http://virtserver.swaggerhub.com/formidableservices/naturalinput/1.0.0'
components:
  requestBodies:
    PageSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PageSetting'
      description: Page object that needs to be added to Document.
      required: true
    DocumentSetting:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DocumentSetting'
      description: Document object that needs to be added to the store
      required: true
  
    Page:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Page'
      description: Page object that needs to be added to Document.
      required: true
    Document:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Document'
      description: Document object that needs to be added to the store
      required: true
      

  schemas:
    DocumentSetting:
      type: object
      required:
        - name
      properties:
        identifier:
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/PageSetting'
        name:
          type: string
    PageSetting:
      type: object
      properties:
        address:
          type: string
        number:
          type: integer
          format: int32

    Document:
      type: object
      required:
        - identifier
      properties:
        identifier:
          type: string
        pages:
          type: array
          items:
            $ref: '#/components/schemas/Page'
        name:
          type: string
    Page:
      type: object
      properties:
        address:
          type: string
        number:
          type: integer
          format: int32
        strokes:
          type: array
          items:
            $ref: '#/components/schemas/Stroke'
    Stroke:
      type: object
      properties:
        dots:
          type: array
          items:
            $ref: '#/components/schemas/Dot'
    Dot:
      type: object
      properties:
        x:
          type: number
          format: float
        'y':
          type: number
          format: float